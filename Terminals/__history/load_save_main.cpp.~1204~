#include <vcl.h>
#pragma hdrstop
#include "load_save_main.h"
#include <fstream>
#include <iomanip>
#include <sstream>
#include <string>
#include <iostream>
using namespace std;
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
//t2daMatr mtx;
TMainForm *MainForm;
//---------------------------------------------------------------------------
__fastcall TMainForm::TMainForm(TComponent* Owner)
	: TForm(Owner)
{
}


		  void __fastcall TMainForm::Menu_CloseClick(TObject *Sender)
{
Close();
}
//---------------------------------------------------------------------------








void __fastcall TMainForm::frmt_nddtmeClick(TObject *Sender)
{	if(frmt_nddtme->Checked) {
		GroupBox_from_to->Visible = false;
		GroupBox_period ->Visible = true;
		Eperiod->SetFocus();
	}else {
		GroupBox_from_to->Visible = true;
		GroupBox_period ->Visible = false;
        EFromT->SetFocus();
	}
}
//---------------------------------------------------------------------------




void __fastcall TMainForm::Menu_LoadBClick(TObject *Sender)
{   if(Menu_Save->Enabled ==true)
	{
		switch(Application->MessageBoxW((L"Вы хотите сохранить измененения в файл '"+OpenDialog->FileName+L"' ?").w_str(),MainForm->Caption.w_str(),MB_YESNOCANCEL|MB_ICONQUESTION))
		{ 	case ID_YES: Menu_SaveClick(Sender); OpenDialog->FileName="";
			break;
			case ID_NO: OpenDialog->FileName="";
			break;
			case ID_CANCEL: return;
		}
	}
    OpenDialog->FileName="";
	if(!OpenDialog->Execute()) {
		StatBar->SimpleText = L"ошибка открытия файла!";
		return;
	}
	ifstream ifile(AnsiString(OpenDialog->FileName).c_str(), ios::binary |ios::in);
	if (!ifile.is_open())
	{   StatBar->SimpleText = L"Файл"+OpenDialog->FileName+ L"не открыт!" ;
		return;
	}
	ws(ifile);
	if (ifile.eof()) {
		ifile.close();
		StatBar->SimpleText  =L"Файл пустой!";
		return;
	}
    trmnlsPep.Length = 0;
    tElem Prtct;
	ifile.read((char *)&Prtct, sizeof(tElem));
	ifile.read((char *)&termsavlble, sizeof(tElem));
	try{
	   for (int i=0;i<(Prtct-1)/3;i++)
		   { trmnlsPep.Length +=1;
			 ifile.read((char *)&trmnlsPep[trmnlsPep.Length -1].termPckd, sizeof(tElem));
			 ifile.read((char *)&trmnlsPep[trmnlsPep.Length -1].fromT, sizeof(unsigned _int8));
			 ifile.read((char *)&trmnlsPep[trmnlsPep.Length -1].toT, sizeof(unsigned _int8));
		   };
	}catch(...) {
		trmnlsPep.Length = 0;
		ifile.close();
		Application->MessageBox(L"Ошибка при загрузке информации",L"Ошибка",MB_OK|MB_ICONERROR);
		return;
	}
    ifile.close();
	if(Prtct!= 3*trmnlsPep.Length +1)
		{
		Application->MessageBox(L"Двоичные данные в файле повреждены!",L"Ошибка",MB_OK|MB_ICONERROR);
		trmnlsPep.Length = 0;
		return;
	}
    for(int i=StrTabl->RowCount;i>0;i--)
	{
	StrTabl->Rows[i]->Clear();
	}
    StrTabl->RowCount = 1;
	for(int i=1;i<=trmnlsPep.Length;i++)
    {
		StrTabl->RowCount +=1;
		StrTabl->Cells[0][i]=IntToStr(i);
		for(int j=trmnlsPep[i-1].fromT;j<=trmnlsPep[i-1].toT;j++)
		{
			StrTabl->Cells[j+1][i]= L"*";
		}
	}
	Cdo->Checked = true;
    Bobrstart->Enabled = true;
	Etrmnls->Enabled = false;
    Menu_Save -> Enabled = false;
	Menu_Save_R ->Enabled = true;
	Menu_Create->Enabled = true;
    Etrmnls->Value=termsavlble;

}

void __fastcall TMainForm::Menu_SaveClick(TObject *Sender)
{ 	if(OpenDialog->FileName =="")
	{   Menu_SaveAsClick(Sender);
		return;
	}
	Write(OpenDialog->FileName);
   /*	ofstream out(AnsiString(OpenDialog->FileName).c_str() ,ios::binary);
   if (!out.is_open()){
	 Application->MessageBox(L"Ошибка во время открытия файла!",MainForm->Caption.w_str(),MB_OK|MB_ICONERROR);
	 bSaved = false;
	 return;
	}
	tElem Prtct = 3*trmnlsPep.Length+1;
	out.write((char*)&Prtct, sizeof(tElem));
	out.write((char*)&termsavlble, sizeof(tElem));
	for (int i = 0; i < trmnlsPep.Length; i++)
	{
		out.write((char*)&trmnlsPep[i].termPckd, sizeof(tElem));
		out.write((char*)&trmnlsPep[i].fromT, sizeof(unsigned _int8));
		out.write((char*)&trmnlsPep[i].toT, sizeof(unsigned _int8));
	}
	out.close();
	bSaved = true;
	Menu_Save -> Enabled = false;
	Menu_SaveAs->Enabled = true;
	Menu_Create->Enabled = true;
	Menu_Save_R->Enabled = true;  */
}
void __fastcall Write(UnicodeString FileN);
{


   ofstream out(AnsiString(FileN).c_str() ,ios::binary);
   /*	if (!out.is_open()){
	 Application->MessageBox(L"Ошибка во время открытия файла!",MainForm->Caption.w_str(),MB_OK|MB_ICONERROR);
	 bSaved = false;
	 return;
	}*/
	tElem Prtct = 3*trmnlsPep.Length+1;
	out.write((char*)&Prtct, sizeof(tElem));
	out.write((char*)&termsavlble, sizeof(tElem));
	for (int i = 0; i < trmnlsPep.Length; i++)
	{
		out.write((char*)&trmnlsPep[i].termPckd, sizeof(tElem));
		out.write((char*)&trmnlsPep[i].fromT, sizeof(unsigned _int8));
		out.write((char*)&trmnlsPep[i].toT, sizeof(unsigned _int8));
	}
	out.close();
	bSaved = true;
	Menu_Save -> Enabled = false;
	Menu_SaveAs->Enabled = true;
	Menu_Create->Enabled = true;
	Menu_Save_R->Enabled = true;

}

//---------------------------------------------------------------------------

void __fastcall TMainForm::Menu_SaveAsClick(TObject *Sender)
{
	if(!SaveDialog->Execute()) {
	StatBar->SimpleText = L"Ошибка открытия окна сохранения!";
     return;
	}
    OpenDialog->FileName = SaveDialog->FileName;
	Menu_SaveClick(Sender);
}
//--------------------------------------------------------------------------


void __fastcall TMainForm::FormCloseQuery(TObject *Sender, bool &CanClose)
{
if(Menu_Save->Enabled==true)
	switch(Application->MessageBoxW((L"Вы хотите сохранить измененения в файл '"+OpenDialog->FileName+L"' ?").w_str(),Application->Title.w_str(),MB_YESNOCANCEL|MB_ICONQUESTION))
	{
		case ID_YES: Menu_SaveClick(Sender);
		if(!bSaved)        //проверка успешного сохранения.
		{	CanClose=false;
			return;}
		else return;
		case ID_NO: return;
		case ID_CANCEL: CanClose=false;
	}
}



void __fastcall TMainForm::Menu_Save_RClick(TObject *Sender)
{	SaveDialog->FileName="";
	if(!SaveDialog->Execute())
	{   StatBar->SimpleText = L"Ошибка во время открытия файла!";
		return;
	}
	fstream ofileR(AnsiString(SaveDialog->FileName).c_str(),ios::out);
	if(!ofileR.is_open())
	{	StatBar->SimpleText="Файл не открыт";
		return;
	}
	ofileR<<"Таблица с резервацией машинного времени в "<< termsavlble <<" терминалах:\n\n";
	ofileR<<"Пользователь\\Время  0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23\n";
	for(int i=0;i<trmnlsPep.Length;i++)
	{	ofileR<< setw(9) <<i+1<<setw(12+3*trmnlsPep[i].fromT)<<"*";
		for(int j =trmnlsPep[i].fromT+1;j<=trmnlsPep[i].toT;j++) ofileR<<setw(3)<<"*";
        ofileR<<"\n";
	}
	ofileR.close();
	return;
}
//---------------------------------------------------------------------------
                               s



void __fastcall TMainForm::CdoClick(TObject *Sender)
{	if(Cdo->Checked)
	{   Bobrstart->Enabled = true;
		if(Etrmnls->Value == termsavlble)
		{	Etrmnls->Enabled = false;
           	return;
		}
		if(Etrmnls->Value < termsavlble)
		{	switch(Application->MessageBoxW((L"При уменьшении кол-ва доступных терминалов все время и пользователи,зарезервировавшие его на "+IntToStr(Etrmnls->Value +1)+L"-м и последующих терминалах,будут удалены!").w_str(),Application->Title.w_str(),MB_YESNO|MB_ICONQUESTION))
			{
				case ID_YES: break;
				case ID_NO: Etrmnls->Value = termsavlble ;Cdo->Checked = false; return;
			}
		}
		Etrmnls->Enabled = false;
		termsavlble = Etrmnls->Value;

		//-----------------------------------------добавить функцию очистки таблицы, когда изучу ==================================================================================================================================================================================================================
		for(int i=0;i<trmnlsPep.Length;i++)
		{   if(trmnlsPep[i].termPckd > Etrmnls->Value)
			{
				for(int j=i;j<trmnlsPep.Length -1;j++)
				{
					trmnlsPep[j].termPckd = trmnlsPep[j+1].termPckd;
					trmnlsPep[j].fromT = trmnlsPep[j+1].fromT;
					trmnlsPep[j].toT = trmnlsPep[j+1].toT;
				}
				trmnlsPep.Length -= 1;
                i--;
			}

		}
		//-----------------------------------------добавить функцию заполнения таблиц, когда изучу ==================================================================================================================================================================================================================
		//Bobrstart->Enabled = true;
	}
	else {
        Bobrstart->Enabled = false;
		Etrmnls->Enabled = true;
	}
}
//---------------------------------------------------------------------------


void __fastcall TMainForm::BobrstartClick(TObject *Sender)
{   bool vidVInf =false;
	unsigned _int16 helptrmn, prstart;
	if(!frmt_nddtme->Checked)
	{
		for(int i=1;i<=termsavlble;i++)
		{   if(!vidVInf)
			{   vidVInf=true;
					for(int j=0;j<trmnlsPep.Length;j++)
				{	if(trmnlsPep[j].termPckd == i)
					{	if(!(EFromT->Value > trmnlsPep[j].toT || EToT->Value < trmnlsPep[j].fromT)) vidVInf= false;
					}
					if(j== trmnlsPep.Length-1 && vidVInf) helptrmn = i;
				}
			}
		}
	}
	else
	{   for(int i=1;i<=termsavlble;i++)
		{
			for(int j=0;j<25-Eperiod->Value;j++)
			{	vidVInf = true;
				for(int n=0;n<trmnlsPep.Length;n++)
				{   if(trmnlsPep[n].termPckd == i)
					{
						if(!(j > trmnlsPep[n].toT || j+Eperiod->Value -1 < trmnlsPep[n].fromT)) vidVInf = false;
					}
				}
				if(vidVInf)
				{
					prstart = j;
					helptrmn = i;
					j=24;
					i = termsavlble +1;
				}

			}
		}
	}
	if(!vidVInf &&trmnlsPep.Length!=0)
	{	StatBar->SimpleText = L"Временной промежуток с "+IntToStr(EFromT->Value)+L" до "+IntToStr(EToT->Value)+" занят!";
		return;
	}
	else StatBar->SimpleText = L"Резервация прошла успешно!";
	if( trmnlsPep.Length ==0)
	{   prstart = 0;
		helptrmn = 1;
	}
	trmnlsPep.Length +=1;
	if(!frmt_nddtme->Checked)
	{
		trmnlsPep[trmnlsPep.Length -1].fromT = EFromT->Value;
		trmnlsPep[trmnlsPep.Length -1].toT = EToT->Value;
	}
	else
	{	trmnlsPep[trmnlsPep.Length -1].fromT = prstart;
		trmnlsPep[trmnlsPep.Length -1].toT = prstart+ Eperiod->Value -1;
	}
	trmnlsPep[trmnlsPep.Length -1].termPckd = helptrmn;
			//	Memo->Lines->Add(IntToStr(termsavlble)+L" las "+IntToStr(trmnlsPep.Length)+L" | "+IntToStr(EFromT->Value)+L" | "+IntToStr(EToT->Value)+" => "+IntToStr(trmnlsPep[trmnlsPep.Length -1].fromT)+L" | "+IntToStr(trmnlsPep[trmnlsPep.Length -1].toT)+L" | "+IntToStr(trmnlsPep[trmnlsPep.Length -1].termPckd));
	StrTabl->RowCount +=1;
	StrTabl->Cells[0][trmnlsPep.Length]=IntToStr(trmnlsPep.Length);
	for(int i=trmnlsPep[trmnlsPep.Length -1].fromT;i<=trmnlsPep[trmnlsPep.Length -1].toT;i++)
	{
		StrTabl->Cells[i+1][trmnlsPep.Length]= L"*";
    }
	Menu_Save_R->Enabled = true;
	Menu_Save ->Enabled = true;
	Menu_Create ->Enabled = true;
    Menu_SaveAs->Enabled = true;



	//-----------------------------------------добавить функцию добавления строки, когда изучу ==================================================================================================================================================================================================================


}

void __fastcall TMainForm::EFromTChange(TObject *Sender)
{
	if(EFromT->Value > EToT->Value) EToT->Value  = EFromT->Value;
}
//---------------------------------------------------------------------------

void __fastcall TMainForm::EToTChange(TObject *Sender)
{	EFromTChange(Sender);
}
//---------------------------------------------------------------------------



void __fastcall TMainForm::Menu_CreateClick(TObject *Sender)
{
	if(Menu_Save->Enabled ==true)
	{
		switch(Application->MessageBoxW((L"Вы хотите сохранить измененения в файл '"+OpenDialog->FileName+L"' ?").w_str(),MainForm->Caption.w_str(),MB_YESNOCANCEL|MB_ICONQUESTION))
		{ 	case ID_YES: Menu_SaveClick(Sender); OpenDialog->FileName="";
			break;
			case ID_NO: OpenDialog->FileName="";
			break;
			case ID_CANCEL: return;
		}
	}
	for(int i=trmnlsPep.Length;i>0;i--)
	{
	StrTabl->Rows[i]->Clear();
    }
	StrTabl->RowCount=1;
	trmnlsPep.Length = 0;
	Menu_Save->Enabled = false;
	Menu_Save_R->Enabled= false;
    OpenDialog->FileName="";

	////////// очистка таблицы

}
//---------------------------------------------------------------------------

											// - не писал назначения функций в курсовой от сюда
void __fastcall TMainForm::FormCreate(TObject *Sender)
{
	StrTabl->Cells[0][0] = L"Пользователь\\Время";
	for(int i=0;i<24;i++)
	{
		StrTabl->Cells[i+1][0] = IntToStr(i);
	}
	bSaved=false;
}
//---------------------------------------------------------------------------

